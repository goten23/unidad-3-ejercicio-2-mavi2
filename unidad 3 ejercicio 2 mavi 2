import pygame
import sys

# Inicializar Pygame
pygame.init()

# Definir colores
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)

# Definir parámetros de la ventana
WIDTH, HEIGHT = 800, 600
FPS = 60

# Definir variables de pelotas
ball1_pos = [WIDTH // 3, HEIGHT // 2]
ball2_pos = [2 * WIDTH // 3, HEIGHT // 2]
ball_radius = 20
spring_length = 200
spring_width = 5

# Inicializar la ventana
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Pelotas con Resorte")
clock = pygame.time.Clock()

# Función para dibujar las pelotas y el resorte
def draw_balls_and_spring():
    screen.fill(WHITE)
    pygame.draw.circle(screen, RED, ball1_pos, ball_radius)
    pygame.draw.circle(screen, RED, ball2_pos, ball_radius)
    pygame.draw.line(screen, BLACK, ball1_pos, ball2_pos, spring_width)

# Bucle principal del juego
running = True
active_ball = None
while running:
    clock.tick(FPS)
    
    # Manejo de eventos
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.MOUSEBUTTONDOWN:
            # Verificar si el click fue dentro de una de las pelotas
            if pygame.mouse.get_pressed()[0]:
                mouse_pos = pygame.mouse.get_pos()
                distance_ball1 = ((mouse_pos[0] - ball1_pos[0])**2 + (mouse_pos[1] - ball1_pos[1])**2)**0.5
                distance_ball2 = ((mouse_pos[0] - ball2_pos[0])**2 + (mouse_pos[1] - ball2_pos[1])**2)**0.5
                if distance_ball1 <= ball_radius:
                    active_ball = 1
                elif distance_ball2 <= ball_radius:
                    active_ball = 2
        elif event.type == pygame.MOUSEBUTTONUP:
            active_ball = None
    
    # Actualizar posición de la pelota activa (si existe)
    if active_ball:
        if active_ball == 1:
            ball1_pos = pygame.mouse.get_pos()
        elif active_ball == 2:
            ball2_pos = pygame.mouse.get_pos()
    
    # Dibujar pelotas y resorte
    draw_balls_and_spring()
    
    # Actualizar pantalla
    pygame.display.flip()

# Salir del juego
pygame.quit()
sys.exit()
